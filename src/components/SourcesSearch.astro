---
import ProjectLayout from "../layouts/ProjectLayout.astro";
import { app, get_user_session } from "../firebase/server";
import type DatabaseSource from "../lib/source_database";
import { getFirestore } from "firebase-admin/firestore";
import type { UserRecord } from "firebase-admin/auth";

interface Props {
  user: UserRecord;
}

const { user } = Astro.props;

import Fuse, { type FuseResult } from "fuse.js";

const db = getFirestore(app);
const sources_ref = db.collection("Sources");
const sources_snapshot = await sources_ref
  .where("student_id", "==", user.uid)
  .get();
const user_sources: DatabaseSource[] = sources_snapshot.docs.map((doc) => ({
  primary_id: doc.id,
  source: doc.data(),
})) as DatabaseSource[];

let results: DatabaseSource[];
let search_query: string = Astro.url.searchParams.get("search") || "";

const fuse_options = {
  keys: ["source.full_citation", "source.title"],
  includeScore: true,
  threshold: 0.35,
};

if (search_query == "") {
  results = user_sources;
} else {
  const fuse = new Fuse(user_sources, fuse_options);
  results = fuse
    .search(search_query)
    .map((source: FuseResult<DatabaseSource>) => source.item);
}
---


<table class="source-info">
  <tr class="header-row">
    <th>Title</th>
    <th>Author</th>
    <th>Year</th>
    <th>Chicago Citation</th>
  </tr>
  {
    results.map((source: DatabaseSource) => (
      <tr>
        <td>{source.source.title}</td>
        <td>{source.source.authors[0]}</td>
        <td>{source.source.publishing_year}</td>
        <td>{source.source.full_citation}</td>
      </tr>
    ))
  }
</table>

<style>
td {
  padding: 1rem;
  text-align: left;
  border-bottom: 1px solid var(--color-surface-mixed-400);
}

th {
  padding: 1rem;
  text-align: left;
  border-bottom: 2px solid var(--color-surface-mixed-500);
}

.header-row {
  background-color: var(--color-surface-mixed-200);
  position: relative;
  bottom: 2px;
}

.source-info {
  width: 96%;
  background-color: var(--color-surface-mixed-400);
  position: relative;
  margin-top: 4rem;
  left: 2%;
  box-sizing: border-box;
  border-collapse: collapse;
  border-radius: 8px;
  overflow: hidden;
}

.source-info tr:nth-child(even) {
  background-color: var(--color-surface-mixed-300);
}

h1 {
  color: white;
  position: relative;
  top: 33.5vh;
}


</style>