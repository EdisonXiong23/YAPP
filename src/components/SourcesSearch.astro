---
import type DatabaseSource from "../lib/source_database";
import type { UserRecord } from "firebase-admin/auth";
import { app } from "../firebase/client";
import { collection, query, where, getDocs } from "firebase/firestore";
import { getFirestore } from "firebase/firestore";
import "firebase/firestore";

interface Props {
  user: UserRecord;
}

const { user } = Astro.props;

import Fuse, { type FuseResult } from "fuse.js";

const db = getFirestore(app);
const sources_ref = query(collection(db, "Sources"), where("student_id", "==", user.uid));
const sources_snapshot = await getDocs(sources_ref);
const user_sources: DatabaseSource[] = sources_snapshot.docs.map((doc) => ({
  primary_id: doc.id,
  source: doc.data(),
})) as DatabaseSource[];

let results: DatabaseSource[];
let search_query: string = Astro.url.searchParams.get("search") || "";

const fuse_options = {
  keys: ["source.full_citation", "source.title"],
  includeScore: true,
  threshold: 0.35,
};

if (search_query == "") {
  results = user_sources;
} else {
  const fuse = new Fuse(user_sources, fuse_options);
  results = fuse
    .search(search_query)
    .map((source: FuseResult<DatabaseSource>) => source.item);
}
---

<table class="source-info">
  <tr class="header-row">
    <th>Title</th>
    <th>Author</th>
    <th>Year</th>
    <th>Chicago Citation</th>
    <th> Actions </th>
  </tr>
  {
    results.map((source: DatabaseSource) => (
      <tr>
        <td>{source.source.title}</td>
        <td>{source.source.authors[0]}</td>
        <td>{source.source.publishing_year}</td>
        <td>{source.source.full_citation}</td>
        <td>
          <a href={`sources/edit/${source.primary_id}`}><svg class="w-[36px] h-[36px] text-gray-800 dark:text-white" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="32" height="32" fill="none" viewBox="0 0 24 24">
            <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2.4" d="m14.304 4.844 2.852 2.852M7 7H4a1 1 0 0 0-1 1v10a1 1 0 0 0 1 1h11a1 1 0 0 0 1-1v-4.5m2.409-9.91a2.017 2.017 0 0 1 0 2.853l-6.844 6.844L8 14l.713-3.565 6.844-6.844a2.015 2.015 0 0 1 2.852 0Z"/>
          </svg>
</a>
        </td>
      </tr>
    ))
  }
</table>

<style>
  td {
    padding: 0.75rem;
    text-align: left;
    border-bottom: 1px solid var(--color-surface-mixed-400);
  }

  th {
    padding: 0.75rem;
    text-align: left;
    border-bottom: 2px solid var(--color-surface-mixed-500);
  }

  .header-row {
    background-color: var(--color-surface-mixed-200);
    position: relative;
    bottom: 2px;
  }

  .source-info {
    width: 90%;
    background-color: var(--color-surface-mixed-400);
    position: relative;
    margin-top: 4rem;
    left: 5%;
    box-sizing: border-box;
    border-collapse: collapse;
    border-radius: 8px;
    overflow: hidden;
  }

  .source-info tr:nth-child(even) {
    background-color: var(--color-surface-mixed-300);
  }
  
  .source-info tr {
    border-bottom: 2px solid var(--color-surface-mixed-500);
  }

  h1 {
    color: white;
    position: relative;
    top: 33.5vh;
  }
  
  a {
    color: white;
    text-decoration: none;
  }
  
  a:hover {
      color: var(--color-surface-mixed-600);
  }
  
</style>
