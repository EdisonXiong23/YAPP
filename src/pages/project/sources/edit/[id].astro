---
import ProjectLayout from "../../../../layouts/ProjectLayout.astro"
import Book from "../../../../components/citation_types/Book.svelte"
import { app } from "../../../../firebase/server";
import type DatabaseSource from "../../../../lib/source_database";
import { getFirestore } from "firebase-admin/firestore";
import type Source from "../../../../lib/source";

const { id } = Astro.params;
if (!id) {
  return Astro.redirect("/404");
}
const db = getFirestore(app);
const sources_ref = db.collection("Sources");
const source_snapshot = await sources_ref.doc(id).get();

if (!source_snapshot.exists) {
  return Astro.redirect("/404");
}

let source: DatabaseSource = {
  primary_id: source_snapshot.id,
  source: source_snapshot.data() as Source,
};

---


<ProjectLayout title="Edit Source">
    <Book data={source} client:visible/>
    <button id="delete"> Delete </button>
</ProjectLayout>

<script>
const delete_button = document.getElementById("delete")!;

delete_button.addEventListener("click", async () => {
  const response = await fetch(`/api/sources/${Astro.params.id}`, {
    method: "DELETE",
  });

  return Astro.redirect("/sources");

});

const edit_button = document.getElementById("edit")!;

edit_button.addEventListener("click", async () => {
  return Astro.redirect("/sources");
});

</script>