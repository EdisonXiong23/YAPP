---
import ProjectLayout from "../../../layouts/ProjectLayout.astro";
import { app, get_user_session } from "../../../firebase/server";
import type DatabaseSource from "../../../lib/source_database";
import { getFirestore } from "firebase-admin/firestore";
import SourcesSearch from "../../../components/SourcesSearch.astro";
import Fuse, { type FuseResult } from "fuse.js";

const user = await get_user_session(Astro.cookies);
if (!user) {
  return Astro.redirect("/signin");
}
---

<ProjectLayout title="Sources">
  <a href="sources/add">
    <svg
      class="w-[48px] h-[48px] text-gray-800 dark:text-white"
      aria-hidden="true"
      xmlns="http://www.w3.org/2000/svg"
      width="40"
      height="40"
      fill="none"
      viewBox="0 0 24 24"
    >
      <path
        stroke="currentColor"
        stroke-linecap="round"
        stroke-linejoin="round"
        stroke-width="3"
        d="M5 12h14m-7 7V5"></path>
    </svg>
  </a>

  <div class="source-container">
    <form class="form">
      <input
        type="search"
        id="search"
        name="search"
        placeholder="Search Sources"
      />
      <button type="submit" class="submit-button"> Search </button>
      <button type="reset" class="reset-button"> Reset </button>
    </form>
  </div>
  <SourcesSearch user={user} />
</ProjectLayout>
<script>
  const form = document.querySelector("form");
  form?.addEventListener("submit", (e) => {
    e.preventDefault();
    const search = new FormData(form).get("search")?.toString();
    const url = new URL("/project/sources", window.location.origin);

    if (search && search.length != 0) url.searchParams.set("search", search);
    window.location.assign(url.toString());
  });
</script>

<style>
  .form {
    background: var(--color-surface-mixed-200);
    padding: 0.4rem;
    border-radius: 8px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    max-width: calc(100vw - 2rem - 60vw);
    margin: 0 auto;
    display: flex;
    flex-direction: row;
    gap: 1rem;
    margin-bottom: 1rem;
    justify-content: space-between;
  }

  .form input[type="search"] {
    background-color: rgb(0, 0, 0, 0.3);
    border: solid 1px gray;
    height: 100%;
    border-radius: 5px;
    transition: 0.2s;
    color: grey;
    padding: 10px;
    width: 85%;
    font-size: medium;
    box-sizing: border-box;
    position: relative;
  }

  .reset-button {
    padding: 10px;
    border: 1px solid red;
    background-color: red;
    border-radius: 4px;
    color: white;
    font-weight: 700;
  }

  .reset-button:hover,
  .submit-button:hover {
    cursor: pointer;
    scale: 1.1;
    opacity: 0.8;
  }

  .submit-button {
    padding: 10px;
    border: 1px solid var(--color-primary-200);
    background-color: var(--color-primary-200);
    border-radius: 4px;
    color: white;
    font-weight: 700;
  }

  .form input[type="search"]::placeholder {
    color: #aaa;
  }

  .form select {
    height: auto;
  }

  a {
    background-color: var(--color-primary-200);
    display: flex;
    position: fixed;
    right: 2rem;
    bottom: 2rem;
    text-align: center;
    border-radius: 100%;
    padding: 0.1rem;
    text-decoration: none;
    color: white;
    font-weight: 800;
    transition: 0.2s;
    box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.2);
  }

  a:hover {
    background-color: var(--color-primary-300);
    scale: 1.1;
  }
</style>
