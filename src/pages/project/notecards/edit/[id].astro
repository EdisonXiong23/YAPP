---
import ProjectLayout from "../../../../layouts/ProjectLayout.astro";
import ModifyNotecard from "../../../../components/ModifyNotecard.svelte";
import type DatabaseSource from "../../../../lib/source_database";
import type DatabaseNotecard from "../../../../lib/notecard_database";
import { app } from "../../../../firebase/client";
import { collection, query, where, getDocs, getDoc, doc } from "firebase/firestore";
import { getFirestore } from "firebase/firestore";
import "firebase/firestore";
import type Notecard from "../../../../lib/notecard";

const {user} = Astro.locals;
const { id } = Astro.params;
if (!id) {
  return Astro.redirect("/404");
}

const db = getFirestore(app);
const sources_ref = query(collection(db, "Sources"), where("student_id", "==", user.uid));
const sources_snapshot = await getDocs(sources_ref)
const user_sources: DatabaseSource[] = sources_snapshot.docs.map((doc) => ({
  primary_id: doc.id,
  source: doc.data(),
})) as DatabaseSource[];

const notecards_ref = doc(db, "Notecards", id);
const notecards_snapshot = await getDoc(notecards_ref);

if (!notecards_snapshot.exists) {
  return Astro.redirect("/404");
}

let notecard_data = notecards_snapshot.data() as Notecard;
let notecard: DatabaseNotecard = {
  primary_id: notecards_snapshot.id,
  notecard: notecard_data,
};

if (notecard.notecard.student_id != user.uid) {
  return Astro.redirect("/404");
}
---

<ProjectLayout title="Add Notecard">
  <ModifyNotecard notecard={notecard} sources={user_sources} client:visible />
</ProjectLayout>
